#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  //  600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        btlayer {
            bindings = <&tog 2>;
            key-positions = <51 38>;
        };
    };

    macros {
        ctrl_y_redo: ctrl_y {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(Y)>;
            label = "CTRL_Y";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1        &kp N2        &kp N3  &kp N4     &kp N5       &kp UP_ARROW     &kp N6         &kp N7     &kp N8        &kp N9           &kp N0      &kp BACKSPACE
&kp TAB         &kp Q         &kp W         &kp E   &kp R      &kp T        &kp DOWN_ARROW   &kp Y          &kp U      &kp I         &kp O            &kp P       &kp ENTER
&kp LEFT_SHIFT  &kp A         &kp S         &kp D   &kp F      &kp G        &kp LEFT_ARROW   &kp H          &kp J      &kp K         &kp L            &kp SEMI    &kp APOS
&kp LCTRL       &kp Z         &kp X         &kp C   &kp V      &kp B        &kp RIGHT_ARROW  &kp N          &kp M      &kp COMMA     &kp DOT          &kp FSLH    &kp BACKSLASH
&kp C_MUTE      &kp LEFT_WIN  &kp LEFT_ALT  &mo 1   &kp SPACE  &kp LCTRL    &kp ENTER        &kp BACKSPACE  &kp SPACE  &kp CAPSLOCK  &kp RIGHT_SHIFT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp RIGHT_BRACKET LEFT_BRACKET>;
            display-name = "base_layer";
        };

        layer_1 {
            bindings = <
&kp GRAVE             &kp F1                 &kp F2          &kp F3      &kp F4        &kp F5    &trans  &kp F6  &kp F7  &kp F8  &kp F9   &kp F10   &trans
&kp TILDE             &kp MINUS              &kp UNDERSCORE  &kp EQUAL   &kp PLUS      &trans    &trans  &kp N7  &kp N8  &kp N9  &kp F11  &kp F12   &trans
&kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UP          &kp DELETE  &trans        &trans    &trans  &kp N4  &kp N5  &kp N6  &kp INS  &kp HOME  &kp PG_UP
&kp DEL               &kp LEFT               &kp DOWN        &kp RIGHT   &ctrl_y_redo  &trans    &trans  &kp N1  &kp N2  &kp N3  &trans   &kp END   &kp PG_DN
&trans                &trans                 &trans          &trans      &trans        &trans    &trans  &trans  &trans  &kp N0  &kp DOT  &trans
            >;

            display-name = "alt_layer";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_2 {
            bindings = <
&bt BT_CLR      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                      &trans  &trans  &trans  &trans      &trans     &trans       &trans
&bt BT_CLR_ALL  &out OUT_TOG  &trans        &trans        &bl BL_TOG    &rgb_ug RGB_EFF                   &trans  &trans  &trans  &trans      &trans     &trans       &trans
&trans          &trans        &trans        &trans        &bl BL_CYCLE  &rgb_ug RGB_TOG                   &trans  &trans  &trans  &trans      &trans     &trans       &trans
&trans          &trans        &trans        &bootloader   &trans        &rgb_ug RGB_COLOR_HSB(0,0,100)    &trans  &trans  &trans  &sys_reset  &soft_off  &bootloader  &tog 0
&trans          &trans        &trans        &trans        &trans        &trans                            &trans  &trans  &trans  &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "bt_rgb_layer";
        };
    };
};
